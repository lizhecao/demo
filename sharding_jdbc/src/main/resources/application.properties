logging.level.root = debug

#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/demo?useUnicode=true&characterEncoding=utf-8
#spring.datasource.username=root
#spring.datasource.password=hello123
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# springboot 2.4及以上 不配置common datasource就会出现空指针异常
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.common.username=root
spring.shardingsphere.datasource.common.password= hello123

mybatis.mapper-locations=classpath:mapper/*.xml

spring.shardingsphere.datasource.names=ds-0,ds-1,ds-2,ds-3

spring.shardingsphere.datasource.ds-0.jdbc-url=jdbc:mysql://localhost:3306/demo_ds_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#spring.shardingsphere.datasource.ds_0.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds_0.driver-class-name=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.ds_0.username=root
#spring.shardingsphere.datasource.ds_0.password=hello123

spring.shardingsphere.datasource.ds-1.jdbc-url=jdbc:mysql://localhost:3306/demo_ds_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#spring.shardingsphere.datasource.ds_1.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds_1.driver-class-name=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.ds_1.username=root
#spring.shardingsphere.datasource.ds_1.password=hello123

spring.shardingsphere.datasource.ds-2.jdbc-url=jdbc:mysql://localhost:3306/demo_ds_2?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8

spring.shardingsphere.datasource.ds-3.jdbc-url=jdbc:mysql://localhost:3306/demo_ds_3?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8

spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
#spring.shardingsphere.rules.sharding.binding-tables=t_order,t_order_item
#spring.shardingsphere.rules.sharding.broadcast-tables=t_address

spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds-$->{0..1}.t_order_$->{0..1}
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=t-order-inline

spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake

#spring.shardingsphere.rules.sharding.tables.t_order_item.actual-data-nodes=ds_$->{0..1}.t_order_item_$->{0..1}
#spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_id
#spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-algorithm-name=t_order_item_inline

#spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.column=order_item_id
#spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.key-generator-name=snowflake

spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds-$->{user_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.props.algorithm-expression=t_order_$->{order_id % 2}
#spring.shardingsphere.rules.sharding.sharding-algorithms.t_order_item_inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.t_order_item_inline.props.algorithm-expression=t_order_item_$->{order_id % 2}

spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123


spring.shardingsphere.rules.sharding.tables.t_order1.actual-data-nodes=ds-$->{2..3}.t_order_$->{0..1}
spring.shardingsphere.rules.sharding.tables.t_order1.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order1.table-strategy.standard.sharding-algorithm-name=t-order-inline

spring.shardingsphere.rules.sharding.tables.t_order1.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order1.key-generate-strategy.key-generator-name=snowflake

spring.shardingsphere.rules.sharding.tables.t_order1.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order1.database-strategy.standard.sharding-algorithm-name=database-inline1
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline1.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline1.props.algorithm-expression=ds-$->{user_id % 4}